{
  "swagger": "2.0",
  "info": {
    "title": "user_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "UserService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/user/delete": {
      "delete": {
        "operationId": "UserService_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userDeleteUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/user/register": {
      "post": {
        "operationId": "UserService_RegisterUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userRegisterUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userRegisterUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/user/search": {
      "get": {
        "operationId": "UserService_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userGetUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/user/update": {
      "put": {
        "operationId": "UserService_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userUpdateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userUpdateUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    }
  },
  "definitions": {
    "UserGender": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "MALE",
        "FEMALE",
        "OTHER"
      ],
      "default": "UNKNOWN",
      "description": "Gender of the user."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "userDeleteUserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "userGetUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/userUser"
        }
      }
    },
    "userRegisterUserRequest": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/userUser"
        }
      }
    },
    "userRegisterUserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "userUpdateUserRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/userUser"
        }
      }
    },
    "userUpdateUserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "userUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "User's unique ID of type UUID."
        },
        "email": {
          "type": "string",
          "description": "User's unique email address."
        },
        "phone": {
          "type": "string",
          "description": "User's unique phone number."
        },
        "password": {
          "type": "string",
          "description": "Raw user's password. It is used only in the registration\nprocess or if it needs to be updated. Otherwise, this field\nis always empty."
        },
        "firstName": {
          "type": "string",
          "description": "User's basic information."
        },
        "lastName": {
          "type": "string"
        },
        "gender": {
          "$ref": "#/definitions/UserGender"
        },
        "birthday": {
          "type": "string",
          "description": "Birthday field contains a date in a format of \"2006-Jan-02\"."
        }
      },
      "description": "User represents a basic user object."
    }
  }
}
